# nginx : /usr/local/Cellar/nginx/nginx-1.17.8/objs/nginx
# nginx.conf : /usr/local/nginx/conf/nginx.conf
#user  nobody;
worker_processes 2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	#设定mime类型,类型由mime.type文件定义
    	include       mime.types;
	#设置文件使用的默认的MIME-type
    	default_type  application/octet-stream;
	#sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime
    	sendfile on;
    	tcp_nopush on;
	#keepalive超时时间。
    	keepalive_timeout 65;
    	#gzip on;

	server {

    	listen       10010;
    	server_name  localhost;
        charset utf-8;
        root /Users/jmal/temp/filetest/rootpath;
       	autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
	client_body_temp_path /Users/jmal/temp/filetest/rootpath;
	client_max_body_size 4G;
  	client_body_buffer_size 100m;

        access_log /usr/local/etc/nginx/logs/host.access.log  main;

	location / {
        	# checks for static file, if not found proxy to app
        	try_files $uri/index.html $uri.html $uri @forward_to_app;
    	}

    	location @forward_to_app {
        	proxy_pass      http://127.0.0.1:8088;
		proxy_set_header X-Sendfile-Type   X-Accel-Redirect;
    	}

    }

    include servers/*;
}
